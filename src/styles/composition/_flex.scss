/**
 * Default flexbox utility classes to control layout
 *
 * --layout-gap: set the gap between the child elements (horizontal & vertical)
 * --layout-direction: sets flex-direction
 * --layout-align: sets align-items
 */
.flex {
  $root: &;
  --layout-gap: 0;
  --layout-direction: row;

  --layout-align: center;
  --layout-items-align: center;
  --layout-self-aling: center;

  --layout-justify: center;
  --layout-item-justify: center;
  --layout-self-justify: center;

  display: flex;
  flex-direction: var(--layout-direction);
  gap: var(--layout-gap);

  &.row {
    flex-direction: var(--layout-direction);
  }
  &.column {
    --layout-direction: column;
    flex-direction: var(--layout-direction);
  }
  &.column-reverse {
    --layout-direction: column-reverse;
    flex-direction: var(--layout-direction);
  }
  &.content-center {
    --layout-align: center;
    align-content: var(--layout-align);
  }
  &.content-start {
    --layout-align: start;
    align-content: var(--layout-align);
  }
  &.content-end {
    --layout-align: end;
    align-content: var(--layout-align);
  }
  &.items-center {
    align-items: var(--layout-items-align);
  }
  &.justify-center {
    justify-content: var(--layout-justify);
  }
  &.justify-start {
    --layout-justify: start;
    justify-content: var(--layout-justify);
  }
  
  &.justify-end {
    --layout-justify: end;
    justify-content: var(--layout-justify);
  }
  
  &.justify-between {
    --layout-justify: space-between;
    justify-content: var(--layout-justify);
  }

  @include breakpoint-up(large) {
  
    &--lg {
      display: flex;
    }
    &--lg.row--lg {
      --layout-direction: row;
      flex-direction: var(--layout-direction);
    }
    &--lg.column--lg {
      --layout-direction: column;
      flex-direction: var(--layout-direction);
    }
    &--lg.row-reverse--lg {
      --layout-direction: row-reverse;
      flex-direction: var(--layout-direction);
    }
    &--lg.justify-center--lg {
      --layout-justify: center;
      justify-content: var(--layout-justify);
    }
  }
}


@include breakpoint-up(large) {
/*   .lg\:flex {
    display: flex;
  }
  .lg\:row-reverse {
    --layout-direction: row-reverse;
    flex-direction: var(--layout-direction);
  }
  .lg\:column-reverse {
    --layout-direction: column-reverse;
    flex-direction: var(--layout-direction);
  } */
}

/**
 *  Utility classes to control the shared --layout-X properties amongst the
 *  layout classes
 */

/* Flex direction */
.--column {
  --layout-direction: column;
}
.--row {
  --layout-direction: row;
}
/* helpers around the cross axis */
.--start {
  --layout-align: flex-start;
}
.--end {
  --layout-align: flex-end;
}
.--center {
  --layout-align: center;
}
.--stretch {
  --layout-align: stretch;
}


